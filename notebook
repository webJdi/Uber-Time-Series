{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10647583,"sourceType":"datasetVersion","datasetId":6592703},{"sourceId":10652877,"sourceType":"datasetVersion","datasetId":6596630}],"dockerImageVersionId":30839,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Uber Trip Time Series Analysis","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"markdown","source":"### Authors:\n\nSuman Senapati\n\nKoelgeet Kaur","metadata":{}},{"cell_type":"markdown","source":"Based on the dataset we are working on, we may look at the following goals/objectives:\n\n## **1. Ride Demand Prediction**\n### **Goal:** Predict the number of Uber pickups at a given time and location.\n- **Input Features:**  \n  - Date & Time (hour, day, month, weekday/weekend)\n  - Location (Latitude & Longitude or Zone ID)\n- **Output:** Expected number of Uber pickups.\n- **Models:**  \n  - **Time Series Models:** ARIMA, SARIMA, Facebook Prophet  \n  - **Machine Learning Models:** XGBoost, Random Forest, LSTM (Deep Learning)\n\n**Use Case:** Helps Uber optimize driver deployment and dynamic pricing.\n\n\n## **2. Trip Hotspot Prediction**\n### **Goal:** Predict the most popular pickup locations at different times of the day.\n- **Input Features:**  \n  - Time of Day, Day of Week\n  - Past demand in the same location\n- **Output:** Top **N** locations where demand will be high.\n- **Models:**  \n  - **Clustering:** K-Means, DBSCAN (to identify ride hotspots)\n  - **Regression Models:** Random Forest, Gradient Boosting\n\n**Use Case:** Uber can allocate more drivers in high-demand areas.\n\n\n## **3. Peak Hour Traffic Analysis**\n### **Goal:** Predict when ride demand will surge based on past trends.\n- **Input Features:**  \n  - Hourly Uber pickup trends\n  - Day of the week, Holiday indicators\n  - External data (weather, events)\n- **Output:** Predict peak ride demand hours.\n- **Models:**  \n  - Time Series Forecasting (LSTM, ARIMA, Prophet)\n  - Classification (Random Forest, XGBoost)\n\n✅ **Use Case:** Helps Uber optimize surge pricing and driver incentives.\n\n---\n\n\n## **6. Base Company Popularity Prediction**\n### **Goal:** Predict which Uber base (Unter, Hinter, etc.) will have the most rides in future months.\n- **Input Features:**  \n  - Historical rides per base\n  - Location trends\n- **Output:** Future demand per base.\n- **Models:**  \n  - Time Series Forecasting (Prophet, SARIMA)\n  - Classification (XGBoost, Random Forest)\n\n✅ **Use Case:** Helps Uber manage ride allocation per base.\n\n---\n\nWe can decide on the direction based on the analysis","metadata":{}},{"cell_type":"markdown","source":"## 0. Library Installation (If Any)","metadata":{}},{"cell_type":"markdown","source":"## 1. Importing Libraries","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sn\nimport glob","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:37.261641Z","iopub.execute_input":"2025-02-03T16:38:37.262020Z","iopub.status.idle":"2025-02-03T16:38:37.266982Z","shell.execute_reply.started":"2025-02-03T16:38:37.261987Z","shell.execute_reply":"2025-02-03T16:38:37.265717Z"}},"outputs":[],"execution_count":7},{"cell_type":"markdown","source":"## 2. Importing datasets","metadata":{}},{"cell_type":"code","source":"csv_files = glob.glob(\"/kaggle/input/uber-raw-data-apr-2014-sep-2014/*.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:37.268735Z","iopub.execute_input":"2025-02-03T16:38:37.269166Z","iopub.status.idle":"2025-02-03T16:38:37.291441Z","shell.execute_reply.started":"2025-02-03T16:38:37.269132Z","shell.execute_reply":"2025-02-03T16:38:37.289928Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/uber-trip-data-jan-june-2015/uber-raw-data-janjune-15.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:37.294005Z","iopub.execute_input":"2025-02-03T16:38:37.294457Z","iopub.status.idle":"2025-02-03T16:38:51.526136Z","shell.execute_reply.started":"2025-02-03T16:38:37.294412Z","shell.execute_reply":"2025-02-03T16:38:51.524996Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"dfs = [pd.read_csv(file) for file in csv_files]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:51.527918Z","iopub.execute_input":"2025-02-03T16:38:51.528325Z","iopub.status.idle":"2025-02-03T16:38:54.344540Z","shell.execute_reply.started":"2025-02-03T16:38:51.528285Z","shell.execute_reply":"2025-02-03T16:38:54.343363Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"raw_df = pd.concat(dfs, ignore_index=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:54.345618Z","iopub.execute_input":"2025-02-03T16:38:54.345934Z","iopub.status.idle":"2025-02-03T16:38:54.409879Z","shell.execute_reply.started":"2025-02-03T16:38:54.345909Z","shell.execute_reply":"2025-02-03T16:38:54.408829Z"}},"outputs":[],"execution_count":11},{"cell_type":"markdown","source":"## 3. Data Pre-processing","metadata":{}},{"cell_type":"code","source":"raw_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:54.410959Z","iopub.execute_input":"2025-02-03T16:38:54.411255Z","iopub.status.idle":"2025-02-03T16:38:54.423696Z","shell.execute_reply.started":"2025-02-03T16:38:54.411229Z","shell.execute_reply":"2025-02-03T16:38:54.422356Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"          Date/Time      Lat      Lon    Base\n0  5/1/2014 0:02:00  40.7521 -73.9914  B02512\n1  5/1/2014 0:06:00  40.6965 -73.9715  B02512\n2  5/1/2014 0:15:00  40.7464 -73.9838  B02512\n3  5/1/2014 0:17:00  40.7463 -74.0011  B02512\n4  5/1/2014 0:17:00  40.7594 -73.9734  B02512","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date/Time</th>\n      <th>Lat</th>\n      <th>Lon</th>\n      <th>Base</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5/1/2014 0:02:00</td>\n      <td>40.7521</td>\n      <td>-73.9914</td>\n      <td>B02512</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5/1/2014 0:06:00</td>\n      <td>40.6965</td>\n      <td>-73.9715</td>\n      <td>B02512</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5/1/2014 0:15:00</td>\n      <td>40.7464</td>\n      <td>-73.9838</td>\n      <td>B02512</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5/1/2014 0:17:00</td>\n      <td>40.7463</td>\n      <td>-74.0011</td>\n      <td>B02512</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5/1/2014 0:17:00</td>\n      <td>40.7594</td>\n      <td>-73.9734</td>\n      <td>B02512</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:54.424630Z","iopub.execute_input":"2025-02-03T16:38:54.424952Z","iopub.status.idle":"2025-02-03T16:38:54.451100Z","shell.execute_reply.started":"2025-02-03T16:38:54.424925Z","shell.execute_reply":"2025-02-03T16:38:54.449918Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"  Dispatching_base_num          Pickup_date Affiliated_base_num  locationID\n0               B02617  2015-05-17 09:47:00              B02617         141\n1               B02617  2015-05-17 09:47:00              B02617          65\n2               B02617  2015-05-17 09:47:00              B02617         100\n3               B02617  2015-05-17 09:47:00              B02774          80\n4               B02617  2015-05-17 09:47:00              B02617          90","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Dispatching_base_num</th>\n      <th>Pickup_date</th>\n      <th>Affiliated_base_num</th>\n      <th>locationID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>B02617</td>\n      <td>2015-05-17 09:47:00</td>\n      <td>B02617</td>\n      <td>141</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>B02617</td>\n      <td>2015-05-17 09:47:00</td>\n      <td>B02617</td>\n      <td>65</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>B02617</td>\n      <td>2015-05-17 09:47:00</td>\n      <td>B02617</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>B02617</td>\n      <td>2015-05-17 09:47:00</td>\n      <td>B02774</td>\n      <td>80</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>B02617</td>\n      <td>2015-05-17 09:47:00</td>\n      <td>B02617</td>\n      <td>90</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:40:17.268455Z","iopub.execute_input":"2025-02-03T16:40:17.268819Z","iopub.status.idle":"2025-02-03T16:40:17.274900Z","shell.execute_reply.started":"2025-02-03T16:40:17.268772Z","shell.execute_reply":"2025-02-03T16:40:17.273883Z"}},"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"(14270479, 5)"},"metadata":{}}],"execution_count":21},{"cell_type":"code","source":"raw_df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:40:21.045214Z","iopub.execute_input":"2025-02-03T16:40:21.045640Z","iopub.status.idle":"2025-02-03T16:40:21.051784Z","shell.execute_reply.started":"2025-02-03T16:40:21.045608Z","shell.execute_reply":"2025-02-03T16:40:21.050637Z"}},"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"(4534327, 4)"},"metadata":{}}],"execution_count":22},{"cell_type":"code","source":"base_mapping = {\n    \"B02512\": \"Unter\",\n    \"B02598\": \"Hinter\",\n    \"B02617\": \"Weiter\",\n    \"B02682\": \"Schmecken\",\n    \"B02764\": \"Danach-NY\",\n    \"B02765\": \"Grun\",\n    \"B02835\": \"Dreist\",\n    \"B02836\": \"Drinnen\"\n}","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:54.452217Z","iopub.execute_input":"2025-02-03T16:38:54.452579Z","iopub.status.idle":"2025-02-03T16:38:54.469444Z","shell.execute_reply.started":"2025-02-03T16:38:54.452540Z","shell.execute_reply":"2025-02-03T16:38:54.468183Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"df['Base Name'] = df['Dispatching_base_num'].map(base_mapping)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:54.472105Z","iopub.execute_input":"2025-02-03T16:38:54.472494Z","iopub.status.idle":"2025-02-03T16:38:55.605892Z","shell.execute_reply.started":"2025-02-03T16:38:54.472462Z","shell.execute_reply":"2025-02-03T16:38:55.604811Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"df.dtypes","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:55.607326Z","iopub.execute_input":"2025-02-03T16:38:55.607784Z","iopub.status.idle":"2025-02-03T16:38:55.614850Z","shell.execute_reply.started":"2025-02-03T16:38:55.607745Z","shell.execute_reply":"2025-02-03T16:38:55.613963Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"Dispatching_base_num    object\nPickup_date             object\nAffiliated_base_num     object\nlocationID               int64\nBase Name               object\ndtype: object"},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"raw_df.dtypes","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:40:02.426088Z","iopub.execute_input":"2025-02-03T16:40:02.426666Z","iopub.status.idle":"2025-02-03T16:40:02.436712Z","shell.execute_reply.started":"2025-02-03T16:40:02.426614Z","shell.execute_reply":"2025-02-03T16:40:02.435162Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"Date/Time     object\nLat          float64\nLon          float64\nBase          object\ndtype: object"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"df.describe().T","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:55.615890Z","iopub.execute_input":"2025-02-03T16:38:55.616276Z","iopub.status.idle":"2025-02-03T16:38:56.191042Z","shell.execute_reply.started":"2025-02-03T16:38:55.616238Z","shell.execute_reply":"2025-02-03T16:38:56.189736Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"                 count        mean        std  min   25%    50%    75%    max\nlocationID  14270479.0  152.057375  71.596196  1.0  92.0  157.0  230.0  265.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>locationID</th>\n      <td>14270479.0</td>\n      <td>152.057375</td>\n      <td>71.596196</td>\n      <td>1.0</td>\n      <td>92.0</td>\n      <td>157.0</td>\n      <td>230.0</td>\n      <td>265.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"raw_df.describe().T","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:39:05.384545Z","iopub.execute_input":"2025-02-03T16:39:05.384902Z","iopub.status.idle":"2025-02-03T16:39:05.819618Z","shell.execute_reply.started":"2025-02-03T16:39:05.384876Z","shell.execute_reply":"2025-02-03T16:39:05.818707Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"         count       mean       std      min      25%      50%      75%  \\\nLat  4534327.0  40.739261  0.039950  39.6569  40.7211  40.7422  40.7610   \nLon  4534327.0 -73.973019  0.057267 -74.9290 -73.9965 -73.9834 -73.9653   \n\n         max  \nLat  42.1166  \nLon -72.0666  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Lat</th>\n      <td>4534327.0</td>\n      <td>40.739261</td>\n      <td>0.039950</td>\n      <td>39.6569</td>\n      <td>40.7211</td>\n      <td>40.7422</td>\n      <td>40.7610</td>\n      <td>42.1166</td>\n    </tr>\n    <tr>\n      <th>Lon</th>\n      <td>4534327.0</td>\n      <td>-73.973019</td>\n      <td>0.057267</td>\n      <td>-74.9290</td>\n      <td>-73.9965</td>\n      <td>-73.9834</td>\n      <td>-73.9653</td>\n      <td>-72.0666</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"markdown","source":"## 4. Exploratory Data Analysis","metadata":{}},{"cell_type":"markdown","source":"### 4.1 Univariate Analysis","metadata":{}},{"cell_type":"code","source":"base_counts = df['Base Name'].value_counts()\n\nfig, ax = plt.subplots(figsize=(15,15))\n\nbase_counts.plot(kind='bar', color='skyblue', edgecolor='black')\n\nplt.xlabel(\"Base Company\")\nplt.ylabel(\"Number of Pickups\")\nplt.title(\"Uber Pickups\")\nplt.xticks(rotation=45)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-03T16:38:56.192118Z","iopub.execute_input":"2025-02-03T16:38:56.192453Z","iopub.status.idle":"2025-02-03T16:38:57.372881Z","shell.execute_reply.started":"2025-02-03T16:38:56.192426Z","shell.execute_reply":"2025-02-03T16:38:57.371715Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1500 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}